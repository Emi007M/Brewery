@using BreweryService.Models
@using BreweryWebApp.ViewComponents

@model IEnumerable<Beer>
@{
    ViewData["Title"] = "Brewery Management Application";
    //var money = await BeerList.GetOverallMoneyAsync();
    //var balance = money.Balance;

}

<div class="container">

    <h1 class="text-center">@ViewData["Title"]</h1>

    <div class="row text-center" id="balance-div">

        @await Component.InvokeAsync(nameof(BeerOverall), new { amount = 99 })
    </div>
    <div class="row">

        <h2>Production</h2>
        <button id="newBeerBtn" class="btn btn-primary btn-sm" style="margin-bottom: 2em;"><i class="fa fa-plus"></i> Add new type of beer to the production</button>

        <div id="production">
            @await Component.InvokeAsync(nameof(BeerList))
        </div>

        <input id="productionBtn" type="button" value="Call daily production" class="btn btn-success" />
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {

        //$('.editable').editable();
        $('.editable').editable({
            validate: {
                beertype: function (v) {
                    //check if not too long
                    if (v.length > 30)
                        return "name is too long, use up to 30 characters";
                },
                beercost: function (v) {
                    //check whether positive float
                    if (!$.isNumeric(v) || v <= 0)
                        return "value has to be a positive number";
                },
                beerprice: function (v) {
                    //check whether positive float
                    if (!$.isNumeric(v) || v <= 0)
                        return "value has to be a positive number";
                },
                beerproduction: function (v) {
                    //check whether positive int
                    if (!$.isNumeric(v) || v < 0 || !(v % 1 === 0) )
                        return "value has to be a non negative integer";
                }

            }

        });

        $('.editable').editable({
            url: function (params) {
                return $.ajax({
                    type: 'POST',
                    url: 'Home/UpdateBeer',
                    data: JSON.stringify(params),
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    async: true,
                    cache: false,
                    timeout: 10000,
                    success: function (response) {
                        alert("Success");
                    },
                    error: function () {
                        alert("Error in Ajax");
                    }
                });
            }
        });

        $('#newBeerBtn').click(function () {
            $.get("/Home/AddNewBeer", function (data) {
                $("#production").html(data);
            });

        });

        $('#productionBtn').click(function () {
            $.get("/Home/InvokeProduction", function (data) {
                $("#production").html(data);

                $.get("/Home/GetOverallBalance", function (data) {
                    $("#balance-div").html(data);
                });
            });

        });
    });
</script>