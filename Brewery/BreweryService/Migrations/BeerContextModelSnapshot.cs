// <auto-generated />
using BreweryService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BreweryService.Migrations
{
    [DbContext(typeof(BeerContext))]
    partial class BeerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("BreweryService.Models.Beer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.Property<float>("Cost");

                    b.Property<bool>("InProduction");

                    b.Property<float>("Price");

                    b.Property<int>("ProducedBottles");

                    b.Property<float>("ProducedCosts");

                    b.Property<int>("ProductionDaily");

                    b.Property<int>("SoldBottles");

                    b.Property<float>("SoldIncome");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("Beers");
                });

            modelBuilder.Entity("BreweryService.Models.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("DiscountsId");

                    b.Property<string>("Key");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("DiscountsId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("BreweryService.Models.ClientInfoFromShop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("AvSale");

                    b.Property<string>("BeerName");

                    b.Property<long?>("ClientId");

                    b.Property<int>("InStock");

                    b.Property<int>("SoldMonth");

                    b.Property<int>("SoldTotal");

                    b.Property<int>("SoldWeek");

                    b.Property<int>("SoldYesterday");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientInfoFromShop");
                });

            modelBuilder.Entity("BreweryService.Models.Discounts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Per100");

                    b.Property<int>("Per1000");

                    b.Property<int>("Per250");

                    b.Property<int>("Per500");

                    b.HasKey("Id");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("BreweryService.Models.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.Property<long>("BeerId");

                    b.Property<long>("ClientId");

                    b.Property<DateTime>("Date");

                    b.Property<int>("Discount");

                    b.Property<float>("Price");

                    b.Property<float>("TotalPrice");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BreweryService.Models.Client", b =>
                {
                    b.HasOne("BreweryService.Models.Discounts", "Discounts")
                        .WithMany()
                        .HasForeignKey("DiscountsId");
                });

            modelBuilder.Entity("BreweryService.Models.ClientInfoFromShop", b =>
                {
                    b.HasOne("BreweryService.Models.Client")
                        .WithMany("Info")
                        .HasForeignKey("ClientId");
                });
#pragma warning restore 612, 618
        }
    }
}
